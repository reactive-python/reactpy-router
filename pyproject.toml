[build-system]
build-backend = "hatchling.build"
requires = ["hatchling", "hatch-build-scripts"]

##############################
# >>> Hatch Build Config <<< #
##############################

[project]
name = "reactpy_router"
description = "A URL router for ReactPy."
readme = "README.md"
keywords = ["React", "ReactJS", "ReactPy", "components"]
license = "MIT"
authors = [{ name = "Mark Bakhit", email = "archiethemonger@gmail.com" }]
requires-python = ">=3.9"
classifiers = [
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Operating System :: OS Independent",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "Topic :: Multimedia :: Graphics",
  "Topic :: Software Development :: Widget Sets",
  "Topic :: Software Development :: User Interfaces",
  "Environment :: Web Environment",
  "Typing :: Typed",
]
dependencies = ["reactpy>=1.1.0, <2.0.0", "typing_extensions"]
dynamic = ["version"]
urls.Changelog = "https://reactive-python.github.io/reactpy-router/latest/about/changelog/"
urls.Documentation = "https://reactive-python.github.io/reactpy-router/latest/"
urls.Source = "https://github.com/reactive-python/reactpy-router"

[tool.hatch.version]
path = "src/reactpy_router/__init__.py"

[tool.hatch.build.targets.sdist]
include = ["/src"]
artifacts = ["/src/reactpy_router/static/"]

[tool.hatch.build.targets.wheel]
artifacts = ["/src/reactpy_router/static/"]

[tool.hatch.metadata]
license-files = { paths = ["LICENSE.md"] }

[tool.hatch.envs.default]
installer = "uv"

[[tool.hatch.build.hooks.build-scripts.scripts]]
commands = [
  "bun install --cwd src/js",
  "bun build src/js/src/index.ts --outfile src/reactpy_router/static/bundle.js --minify",
]
artifacts = []

#############################
# >>> Hatch Test Runner <<< #
#############################

[tool.hatch.envs.hatch-test]
extra-dependencies = ["pytest-sugar", "anyio", "reactpy[testing,starlette]"]
randomize = true
matrix-name-format = "{variable}-{value}"

[[tool.hatch.envs.hatch-test.matrix]]
python = ["3.9", "3.10", "3.11", "3.12"]

[tool.pytest.ini_options]
addopts = """\
    --strict-config
    --strict-markers
    """

#######################################
# >>> Hatch Documentation Scripts <<< #
#######################################

[tool.hatch.envs.docs]
template = "docs"
dependencies = [
  "mkdocs",
  "mkdocs-git-revision-date-localized-plugin",
  "mkdocs-material==9.4.0",
  "mkdocs-include-markdown-plugin",
  "mkdocs-spellcheck[all]",
  "mkdocs-git-authors-plugin",
  "mkdocs-minify-plugin",
  "mike",
  "mkdocstrings[python]",
  "black",                                     # Used by mkdocstrings for auto formatting
  "linkcheckmd",
]

[tool.hatch.envs.docs.scripts]
serve = ["cd docs && mkdocs serve"]
build = ["cd docs && mkdocs build --strict"]
linkcheck = [
  "linkcheckMarkdown docs/ -v -r",
  "linkcheckMarkdown README.md -v -r",
  "linkcheckMarkdown CHANGELOG.md -v -r",
]
deploy_latest = ["cd docs && mike deploy --push --update-aliases {args} latest"]
deploy_develop = ["cd docs && mike deploy --push develop"]

################################
# >>> Hatch Python Scripts <<< #
################################

[tool.hatch.envs.python]
extra-dependencies = ["pyright"]

[tool.hatch.envs.python.scripts]
type_check = ["pyright src"]

############################
# >>> Hatch JS Scripts <<< #
############################

[tool.hatch.envs.javascript]
detached = true

[tool.hatch.envs.javascript.scripts]
check = ["cd src/js && bun install", "cd src/js && bun run check"]
fix = ["cd src/js && bun install", "cd src/js && bun run format"]

#########################
# >>> Generic Tools <<< #
#########################

[tool.ruff]
extend-exclude = [".venv/*", ".eggs/*", "build/*"]
line-length = 120
format.preview = true
lint.extend-ignore = [
  "ARG001",  # Unused function argument
  "ARG002",  # Unused method argument
  "ARG004",  # Unused static method argument
  "FBT001",  # Boolean-typed positional argument in function definition
  "FBT002",  # Boolean default positional argument in function definition
  "PLR2004", # Magic value used in comparison
  "SIM115",  # Use context handler for opening files
  "SLF001",  # Private member accessed
]
lint.preview = true

[tool.coverage.run]
branch = true
parallel = true
source = ["src/", "tests/"]

[tool.coverage.paths]
source = ["src/"]

[tool.coverage.report]
show_missing = true
exclude_lines = ["pragma: no cover", "...", "raise NotImplementedError"]
